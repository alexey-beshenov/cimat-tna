alexey@schema:~$ gp
Reading GPRC: /etc/gprc
GPRC Done.

                     GP/PARI CALCULATOR Version 2.12.0 (alpha)
           amd64 running linux (x86-64/GMP-6.2.0 kernel) 64-bit version
         compiled: Sep  7 2020, gcc version 9.3.0 (Ubuntu 9.3.0-10ubuntu2)
                             threading engine: single
                  (readline v8.0 enabled, extended help enabled)

                      Copyright (C) 2000-2019 The PARI Group

PARI/GP is free software, covered by the GNU General Public License, and comes 
WITHOUT ANY WARRANTY WHATSOEVER.

Type ? for help, \q to quit.
Type ?17 for how to get moral (and possibly technical) support.

parisize = 8000000, primelimit = 500000
? \l "pari-2-log.txt"
   logfile = "pari-2-log.txt"
   log = 1 (on)
   [logfile is "pari-2-log.txt"]

? K=nfinit(x^2-5);
? K.zk
%2 = [1, 1/2*x - 1/2]
? a=idealhnf(K,4+x)
%3 = 
[11 8]

[ 0 1]


? K=nfinit(x^2+1);
? K.zk
%5 = [1, x]


? a=idealhnf(K,2+3*x)
%6 = 
[13 5]

[ 0 1]

? mathnf([2,-3;3,2])
%7 = 
[13 5]

[ 0 1]


? b=idealhnf(K,-3+2*x)
%8 = 
[13 5]

[ 0 1]

? Mod((2+3*x)/(-3+2*x),K.pol)
%9 = Mod(-x, x^2 + 1)


? L=ideallist(K,10)
%10 = [[[1, 0; 0, 1]], [[2, 1; 0, 1]], [], [[2, 0; 0, 2]], [[5, 3; 0, 1], [5, 2; 0, 1]], [], [], [[4, 2; 0, 2]], [[3, 0; 0, 3]], [[10, 3; 0, 1], [10, 7; 0, 1]]]
? vector(#L,i,#L[i])
%11 = [1, 1, 0, 1, 2, 0, 0, 1, 1, 2]
? vecsum(%)
%12 = 9


? K=nfinit(x^3-17);
? L=ideallist(K,10);
? vector(#L,i,#L[i])
%15 = [1, 1, 2, 2, 1, 2, 0, 2, 3, 1]
? vecsum(%)
%16 = 15


? K=nfinit(x^2+1);
? idealdown(K,1+x)
%18 = 2
? idealdown(K,3+3*x)
%19 = 6


? idealnorm(K,1+x)
%20 = 2
? idealnorm(K,3)
%21 = 9
? idealnorm(K,3+3*x)
%22 = 18


? idealismaximal(K,1+x)
%23 = [2, [1, 1]~, 2, 1, [1, -1; 1, 1]]
? idealismaximal(K,3+3*x)
%24 = 0
? L=nfinit(x^3-17);
? idealismaximal(L,7)
%26 = [7, [7, 0, 0]~, 1, 3, 1]
? K=nfinit(x^3-2);


? a=[3,1,2;0,1,0;0,0,1]
%28 = 
[3 1 2]

[0 1 0]

[0 0 1]

? idealtwoelt(K,a)
%29 = [3, [1, 1, 0]~]
? nfbasistoalg(K,%[2])
%30 = Mod(x + 1, x^3 - 2)


? K=nfinit(x^2-5);
? decK=idealprimedec(K,11)
%32 = [[11, [-3, 2]~, 1, 1, [5, 2; 2, 3]], [11, [5, 2]~, 1, 1, [-3, 2; 2, -5]]]
? #decK
%33 = 2
? [decK[1].e,decK[1].f]
%34 = [1, 1]
? decK[1].gen
%35 = [11, [-3, 2]~]
? nfbasistoalg(K,%[2])
%36 = Mod(x - 4, x^2 - 5)


? L=nfinit(polcyclo(5));
? decL=idealprimedec(L,11);
? #decL
%39 = 4
? vector(#decL,i,[decL[i].e,decL[i].f])
%40 = [[1, 1], [1, 1], [1, 1], [1, 1]]


? idealprimedec(K,5)
%41 = [[5, [1, 2]~, 2, 1, [1, 2; 2, -1]]]
? %[1].e
%42 = 2
? idealprimedec(L,5)
%43 = [[5, [-1, 1, 0, 0]~, 4, 1, [-1, -1, -1, 4; -2, -2, -2, 3; 2, -3, -3, 2; 1, 1, -4, 1]]]
? %[1].e
%44 = 4


? K=nfinit(polcyclo(23));
? dec=idealprimedec(K,47);
? #dec
%47 = 22
? K=nfinit(x^2+1);


? L=ideallist(K,20);
? vector(#L,s,sum(i=1,s,#L[i]))
%50 = [1, 2, 2, 3, 5, 5, 5, 6, 7, 9, 9, 9, 11, 11, 11, 12, 14, 15, 15, 17]
? vector(20,i,ceil(Pi/4*i))
%51 = [1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 10, 11, 11, 12, 13, 14, 15, 15, 16]
? quit
